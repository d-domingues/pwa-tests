{"version":3,"sources":["./src/app/camera/camera.page.html","./src/app/camera/photo-displayer/photo-displayer.component.html","./src/app/camera/camera.module.ts","./src/app/camera/camera.page.scss","./src/app/camera/camera.page.ts","./src/app/camera/photo-displayer/photo-displayer.component.ts","./src/app/services/photo.service.ts"],"names":[],"mappings":"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","file":"camera-camera-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar>\\n\\t\\t<ion-title>\\n\\t\\t\\tPhoto Gallery\\n\\t\\t</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-header collapse=\\\"condense\\\">\\n\\t\\t<ion-toolbar>\\n\\t\\t\\t<ion-title size=\\\"large\\\">Photo Gallery</ion-title>\\n\\t\\t</ion-toolbar>\\n\\t</ion-header>\\n\\n\\t<ion-grid>\\n\\t\\t<ion-row>\\n\\t\\t\\t<ion-col size=\\\"3\\\" *ngFor=\\\"let photo of photoService.photos; index as position\\\">\\n\\t\\t\\t\\t<ion-img\\n\\t\\t\\t\\t\\tsrc=\\\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"presentModal(position)\\\"\\n\\t\\t\\t\\t></ion-img>\\n\\t\\t\\t</ion-col>\\n\\t\\t</ion-row>\\n\\t</ion-grid>\\n\\n\\t<ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\n\\t\\t<ion-slide *ngFor=\\\"let photo of photoService.photos; index as position\\\">\\n\\t\\t\\t<ion-img src=\\\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\\\"></ion-img>\\n\\t\\t</ion-slide>\\n\\t</ion-slides>\\n\\n\\t<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\">\\n\\t\\t<ion-fab-button (click)=\\\"photoService.addNewToGallery()\\\">\\n\\t\\t\\t<ion-icon name=\\\"camera\\\"></ion-icon>\\n\\t\\t</ion-fab-button>\\n\\t</ion-fab>\\n</ion-content>\\n<!-- \\n(click)=\\\"showActionSheet(photo, position)\\\"\\n -->\\n\"","export default \"<ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\n\\t<ion-slide *ngIf=\\\"photoService.photos[0] as photo\\\">\\n\\t\\t<ion-img src=\\\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\\\"></ion-img>\\n\\t</ion-slide>\\n\\t<ion-slide *ngIf=\\\"photoService.photos[1] as photo\\\">\\n\\t\\t<ion-img src=\\\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\\\"></ion-img>\\n\\t</ion-slide>\\n\\t<ion-slide *ngIf=\\\"photoService.photos[2] as photo\\\">\\n\\t\\t<ion-img src=\\\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\\\"></ion-img>\\n\\t</ion-slide>\\n</ion-slides>\\n\\n<!-- \\n\\t<ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\n\\t<ion-slide *ngFor=\\\"let photo of photoService.photos; index as position\\\">\\n\\t\\t<ion-img src=\\\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\\\"></ion-img>\\n\\t</ion-slide>\\n</ion-slides>\\n\\n -->\\n\"","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\n\nimport { CameraPage } from './camera.page'\nimport { PhotoDisplayerComponent } from './photo-displayer/photo-displayer.component'\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tIonicModule,\n\t\tRouterModule.forChild([{ path: '', component: CameraPage }])\n\t],\n\tdeclarations: [CameraPage, PhotoDisplayerComponent],\n\tentryComponents: [PhotoDisplayerComponent]\n})\nexport class CameraPageModule {}\n","export default \".camera-footer {\\n  --background: pink !important;\\n  background: pink !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtZXJhL0M6XFxQcm9qZWN0c1xccHdhLWVsZW1lbnRzL3NyY1xcYXBwXFxjYW1lcmFcXGNhbWVyYS5wYWdlLnNjc3MiLCJzcmMvYXBwL2NhbWVyYS9jYW1lcmEucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MsNkJBQUE7RUFDQSwyQkFBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvY2FtZXJhL2NhbWVyYS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FtZXJhLWZvb3RlciB7XHJcblx0LS1iYWNrZ3JvdW5kOiBwaW5rICFpbXBvcnRhbnQ7XHJcblx0YmFja2dyb3VuZDogcGluayAhaW1wb3J0YW50O1xyXG59XHJcbiIsIi5jYW1lcmEtZm9vdGVyIHtcbiAgLS1iYWNrZ3JvdW5kOiBwaW5rICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQ6IHBpbmsgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component } from '@angular/core'\nimport { ActionSheetController, ModalController } from '@ionic/angular'\n\nimport { PhotoService } from '../services/photo.service'\nimport { PhotoDisplayerComponent } from './photo-displayer/photo-displayer.component'\n\n@Component({\n\tselector: 'app-camera',\n\ttemplateUrl: 'camera.page.html',\n\tstyleUrls: ['camera.page.scss']\n})\nexport class CameraPage {\n\tstoredPhotos\n\n\tslideOpts = {\n\t\tspeed: 400,\n\t\tinitialSlide: 0\n\t}\n\n\tstoredPhotos$ = this.photoService.storedPhotos$\n\n\tconstructor(\n\t\tpublic photoService: PhotoService,\n\t\tpublic actionSheetController: ActionSheetController,\n\t\tpublic modalController: ModalController\n\t) {}\n\n\tngOnInit() {\n\t\tthis.photoService.storedPhotos$.subscribe(\n\t\t\tstoredPhotos => (this.storedPhotos = storedPhotos)\n\t\t)\n\t}\n\n\tasync showActionSheet(photo, position) {\n\t\tconst actionSheet = await this.actionSheetController.create({\n\t\t\theader: 'Photos',\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: 'Delete',\n\t\t\t\t\trole: 'destructive',\n\t\t\t\t\ticon: 'trash',\n\t\t\t\t\thandler: () => {\n\t\t\t\t\t\tthis.photoService.deletePicture(photo, position)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: 'Cancel',\n\t\t\t\t\ticon: 'close',\n\t\t\t\t\trole: 'cancel',\n\t\t\t\t\thandler: () => {\n\t\t\t\t\t\t// Nothing to do, action sheet is automatically closed\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t\tawait actionSheet.present()\n\t}\n\n\tasync presentModal(position: number) {\n\t\tconst modal = await this.modalController.create({\n\t\t\tcomponent: PhotoDisplayerComponent,\n\t\t\tcomponentProps: { position }\n\t\t})\n\t\treturn await modal.present()\n\t}\n}\n","import { Component, Input } from '@angular/core'\nimport { PhotoService } from 'src/app/services/photo.service'\n\n@Component({\n\tselector: 'app-photo-displayer',\n\ttemplateUrl: 'photo-displayer.component.html'\n})\nexport class PhotoDisplayerComponent {\n\tprivate _position: number\n\n\t// Optional parameters to pass to the swiper instance. See http://idangero.us/swiper/api/ for valid options.\n\tslideOpts = {\n\t\tspeed: 400,\n\t\tinitialSlide: 0\n\t}\n\n\t@Input() set position(value: number) {\n\t\tthis._position = value\n\t\t// this.slideOpts.initialSlide = value + 1\n\t}\n\n\tconstructor(public photoService: PhotoService) {}\n}\n","import { Injectable } from '@angular/core'\r\nimport {\r\n    Camera,\r\n    CameraPhoto,\r\n    CameraResultType,\r\n    CameraSource,\r\n    Capacitor,\r\n    Filesystem,\r\n    FilesystemDirectory,\r\n    Storage,\r\n} from '@capacitor/core'\r\nimport { Platform } from '@ionic/angular'\r\nimport { bindCallback, forkJoin, from, Observable, of } from 'rxjs'\r\nimport { map, mergeMap } from 'rxjs/operators'\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PhotoService {\r\n\tprivate isDeviceHybrid: boolean\r\n\tpublic photos = []\r\n\tprivate PHOTO_STORAGE = 'photos'\r\n\r\n\t// Retrieve cached photo array data\r\n\tstoredPhotos$ = from(Storage.get({ key: this.PHOTO_STORAGE })).pipe(\r\n\t\tmap(stored => JSON.parse(stored.value) || []),\r\n\t\tmergeMap(\r\n\t\t\t(storedPhotos: Photo[]) =>\r\n\t\t\t\tthis.isDeviceHybrid\r\n\t\t\t\t\t? of(storedPhotos) // If running on the mobile...\r\n\t\t\t\t\t: forkJoin(formatToBase64(storedPhotos)) // If running on the web...\r\n\t\t)\r\n\t)\r\n\r\n\tconstructor(private platform: Platform) {\r\n\t\tthis.isDeviceHybrid = this.platform.is('hybrid')\r\n\t\tthis.storedPhotos$.subscribe(storedPhotos => (this.photos = storedPhotos))\r\n\t}\r\n\r\n\tpublic watchStore(): Observable<any> {\r\n\t\t// formats calback fn data as an Observable\r\n\t\treturn bindCallback(Storage.get)({ key: this.PHOTO_STORAGE })\r\n\t}\r\n\r\n\tpublic async addNewToGallery() {\r\n\t\t// Take a photo\r\n\t\tconst capturedPhoto = await Camera.getPhoto({\r\n\t\t\tresultType: CameraResultType.Uri, // file-based data; provides best performance\r\n\t\t\tsource: CameraSource.Camera, // automatically take a new photo with the camera\r\n\t\t\tquality: 100 // highest quality (0 to 100)\r\n\t\t})\r\n\r\n\t\tconst savedImageFile = await this.savePicture(capturedPhoto)\r\n\r\n\t\t// Add new photo to Photos array\r\n\t\tthis.photos.unshift(savedImageFile)\r\n\r\n\t\t// Cache all photo data for future retrieval\r\n\t\tStorage.set({\r\n\t\t\tkey: this.PHOTO_STORAGE,\r\n\t\t\tvalue: this.isDeviceHybrid\r\n\t\t\t\t? JSON.stringify(this.photos)\r\n\t\t\t\t: JSON.stringify(\r\n\t\t\t\t\t\tthis.photos.map(p => {\r\n\t\t\t\t\t\t\t// Don't save the base64 representation of the photo data,\r\n\t\t\t\t\t\t\t// since it's already saved on the Filesystem\r\n\t\t\t\t\t\t\tconst photoCopy = { ...p }\r\n\t\t\t\t\t\t\tdelete photoCopy.base64\r\n\r\n\t\t\t\t\t\t\treturn photoCopy\r\n\t\t\t\t\t\t})\r\n\t\t\t\t  )\r\n\t\t})\r\n\t}\r\n\r\n\t// Save picture to file on device\r\n\tprivate async savePicture(cameraPhoto: CameraPhoto) {\r\n\t\t// Convert photo to base64 format, required by Filesystem API to save\r\n\t\tconst base64Data = await this.readAsBase64(cameraPhoto)\r\n\r\n\t\t// Write the file to the data directory\r\n\t\tconst fileName = new Date().getTime() + '.jpeg'\r\n\t\tawait Filesystem.writeFile({\r\n\t\t\tpath: fileName,\r\n\t\t\tdata: base64Data,\r\n\t\t\tdirectory: FilesystemDirectory.Data\r\n\t\t})\r\n\r\n\t\t// Get platform-specific photo filepaths\r\n\t\treturn await this.getPhotoFile(cameraPhoto, fileName)\r\n\t}\r\n\r\n\t// Read camera photo into base64 format based on the platform the app is running on\r\n\tprivate async readAsBase64(cameraPhoto: CameraPhoto) {\r\n\t\t// MOBILE: \"hybrid\" will detect Cordova or Capacitor\r\n\t\tif (this.isDeviceHybrid) {\r\n\t\t\t// Read the file into base64 format\r\n\t\t\tconst file = await Filesystem.readFile({\r\n\t\t\t\tpath: cameraPhoto.path\r\n\t\t\t})\r\n\r\n\t\t\treturn file.data\r\n\t\t}\r\n\t\t// WEB: Fetch the photo, read as a blob, then convert to base64 format\r\n\t\tconst response = await fetch(cameraPhoto.webPath ? cameraPhoto.webPath : null)\r\n\t\tconst blob = await response.blob()\r\n\r\n\t\treturn (await this.convertBlobToBase64(blob)) as string\r\n\t}\r\n\r\n\t// Retrieve the photo metadata based on the platform the app is running on\r\n\tprivate async getPhotoFile(\r\n\t\tcameraPhoto: CameraPhoto,\r\n\t\tfileName: string\r\n\t): Promise<Photo> {\r\n\t\tif (this.isDeviceHybrid) {\r\n\t\t\t// Get the new, complete filepath of the photo saved on filesystem\r\n\t\t\tconst fileUri = await Filesystem.getUri({\r\n\t\t\t\tdirectory: FilesystemDirectory.Data,\r\n\t\t\t\tpath: fileName\r\n\t\t\t})\r\n\r\n\t\t\t// Display the new image by rewriting the 'file://' path to HTTP\r\n\t\t\t// Details: https://ionicframework.com/docs/building/webview#file-protocol\r\n\t\t\treturn {\r\n\t\t\t\tfilepath: fileUri.uri,\r\n\t\t\t\twebviewPath: Capacitor.convertFileSrc(fileUri.uri)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Use webPath to display the new image instead of base64 since it's\r\n\t\t\t// already loaded into memory\r\n\t\t\treturn {\r\n\t\t\t\tfilepath: fileName,\r\n\t\t\t\twebviewPath: cameraPhoto.webPath\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Delete picture by removing it from reference data and the filesystem\r\n\tpublic async deletePicture(photo: Photo, position: number) {\r\n\t\t// Remove this photo from the Photos reference data array\r\n\t\tthis.photos.splice(position, 1)\r\n\r\n\t\t// Update photos array cache by overwriting the existing photo array\r\n\t\tStorage.set({\r\n\t\t\tkey: this.PHOTO_STORAGE,\r\n\t\t\tvalue: JSON.stringify(this.photos)\r\n\t\t})\r\n\r\n\t\t// delete photo file from filesystem\r\n\t\tconst filename = photo.filepath.substr(photo.filepath.lastIndexOf('/') + 1)\r\n\t\tawait Filesystem.deleteFile({\r\n\t\t\tpath: filename,\r\n\t\t\tdirectory: FilesystemDirectory.Data\r\n\t\t})\r\n\t}\r\n\r\n\tconvertBlobToBase64 = (blob: Blob) =>\r\n\t\tnew Promise((resolve, reject) => {\r\n\t\t\tconst reader = new FileReader()\r\n\t\t\treader.onerror = reject\r\n\t\t\treader.onload = () => {\r\n\t\t\t\tresolve(reader.result)\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(blob)\r\n\t\t})\r\n\r\n\tasync addNewToGallery1111() {\r\n\t\t// Take a photo\r\n\t\tconst capturedPhoto = await Camera.getPhoto({\r\n\t\t\tresultType: CameraResultType.Uri, // file-based data; provides best performance\r\n\t\t\tsource: CameraSource.Camera, // automatically take a new photo with the camera\r\n\t\t\tquality: 100 // highest quality (0 to 100)\r\n\t\t})\r\n\r\n\t\tconst savedImageFile = await this.savePicture(capturedPhoto)\r\n\r\n\t\t// Add new photo to Photos array\r\n\t\tthis.photos.unshift(savedImageFile)\r\n\r\n\t\t// Cache all photo data for future retrieval\r\n\t\tStorage.set({\r\n\t\t\tkey: this.PHOTO_STORAGE,\r\n\t\t\tvalue: this.isDeviceHybrid\r\n\t\t\t\t? JSON.stringify(this.photos)\r\n\t\t\t\t: JSON.stringify(\r\n\t\t\t\t\t\tthis.photos.map(p => {\r\n\t\t\t\t\t\t\t// Don't save the base64 representation of the photo data,\r\n\t\t\t\t\t\t\t// since it's already saved on the Filesystem\r\n\t\t\t\t\t\t\tconst photoCopy = { ...p }\r\n\t\t\t\t\t\t\tdelete photoCopy.base64\r\n\r\n\t\t\t\t\t\t\treturn photoCopy\r\n\t\t\t\t\t\t})\r\n\t\t\t\t  )\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport interface Photo {\r\n\tfilepath: string\r\n\twebviewPath: string\r\n\tbase64?: string\r\n}\r\n\r\n// PURE FN: Display the photo by reading into base64 format\r\nfunction formatToBase64(storedPhotos: Photo[]) {\r\n\treturn storedPhotos.map(p =>\r\n\t\tfrom(\r\n\t\t\t// Read each saved photo's data from the Filesystem\r\n\t\t\tFilesystem.readFile({\r\n\t\t\t\tpath: p.filepath,\r\n\t\t\t\tdirectory: FilesystemDirectory.Data\r\n\t\t\t})\r\n\t\t).pipe(\r\n\t\t\tmap(readFile => ({\r\n\t\t\t\t...p,\r\n\t\t\t\t// Web platform only: Save the photo into the base64 field\r\n\t\t\t\tbase64: `data:image/jpeg;base64,${readFile.data}`\r\n\t\t\t}))\r\n\t\t)\r\n\t)\r\n}\r\n"],"sourceRoot":"webpack:///"}